package t1;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import org.junit.Test;

public class PenTest {

    @Test
    public void writeWordsByGel() {
        double lineDepth = 1.5;
        double capacity = 30;
        Pen blackGelPen = new Pen(capacity, "Black", InkPenType.Gel, UsePenType.Automatic,
            lineDepth);
        assertThat(blackGelPen.writeLetter('O'), is(true));
        assertThat(blackGelPen.writeLetter('K'), is(true));
        capacity -= 2 * lineDepth;
        assertThat(blackGelPen.getCapacity(), is(capacity));
        assertThat(blackGelPen.writeText("I print full text"), is(true));
        capacity -= "I print full text".replaceAll(" ", "").length() * lineDepth;
        assertThat(blackGelPen.getCapacity(), is(capacity));
        assertThat(blackGelPen.writeText("I not print full text"), is(true));
        assertThat(blackGelPen.getCapacity(), is(0.0));
        assertThat(blackGelPen.writeText("Empty"), is(false));
        blackGelPen.fillPen(10.0);
        assertThat(blackGelPen.getCapacity(), is(10.0));
        assertThat(blackGelPen.writeText("I'm alive!"), is(true));
    }

    @Test
    public void writeWordsByFountain() {
        double lineDepth = 0.75;
        double capacity = 25;
        Pen blackFountainPen = new Pen(capacity, "Black", InkPenType.Fountain, UsePenType.Manual,
            lineDepth);
        assertThat(blackFountainPen.writeLetter('O'), is(true));
        assertThat(blackFountainPen.writeLetter('K'), is(true));
        capacity -= 2 * lineDepth;
        assertThat(blackFountainPen.getCapacity(), is(capacity));
        assertThat(blackFountainPen.writeText("I print full text"), is(true));
        capacity -= "I print full text".replaceAll(" ", "").length() * lineDepth;
        assertThat(blackFountainPen.getCapacity(), is(capacity));
        assertThat(blackFountainPen.writeText("I not print full text"), is(true));
        assertThat(blackFountainPen.getCapacity(), is(0.0));
        assertThat(blackFountainPen.writeText("Empty"), is(false));
        blackFountainPen.fillPen(10.0);
        assertThat(blackFountainPen.getCapacity(), is(10.0));
        assertThat(blackFountainPen.writeText("I'm alive!"), is(true));
    }

    @Test
    public void writeWordsByBall() {
        double lineDepth = 1;
        double capacity = 20;
        Pen redBallPen = new Pen(capacity, "Red", InkPenType.Ball, UsePenType.Automatic, lineDepth);
        assertThat(redBallPen.writeLetter('O'), is(true));
        assertThat(redBallPen.writeLetter('K'), is(true));
        capacity -= 2 * lineDepth;
        assertThat(redBallPen.getCapacity(), is(capacity));
        assertThat(redBallPen.writeText("I print full text"), is(true));
        capacity -= "I print full text".replaceAll(" ", "").length() * lineDepth;
        assertThat(redBallPen.getCapacity(), is(capacity));
        assertThat(redBallPen.writeText("I not print full text"), is(true));
        assertThat(redBallPen.getCapacity(), is(0.0));
        assertThat(redBallPen.writeText("Empty"), is(false));
        redBallPen.fillPen(10.0);
        assertThat(redBallPen.getCapacity(), is(10.0));
        assertThat(redBallPen.writeText("I'm alive!"), is(true));
    }

}
